{% extends 'knp_menu.html.twig' %}

{% macro attributes(attributes) %}
    {% for name, value in attributes %}
        {%- if value is not none and value is not sameas(false) -%}
            {{- ' %s="%s"'|format(name, value is sameas(true) ? name|e : value|e)|raw -}}
        {%- endif -%}
    {%- endfor -%}
{% endmacro %}

{% block compressed_root %}
    {% spaceless %}
        {{ block('root') }}
    {% endspaceless %}
{% endblock %}

{% block root %}
    <div class="well visible-desktop" style="min-width:200px;">
        {% set listAttributes = item.childrenAttributes %}
        {% set listExtras = item.extras %}
        {{ block('list') -}}
    </div>
{% endblock %}

{% block list %}
    {% if item.hasChildren and options.depth is not sameas(0) and item.displayChildren %}
        {%- set listAttributes = listAttributes %}
        {%- if 'div' in listExtras  %}
            {% if 'menu_level_1' not in listAttributes and 'menu_level_2' not in listAttributes %}
                <div class="accordion" id="mainmenu">
                    {{ block('children') }}
                </div>
            {% else %}
                {% if item.currentAncestor %}
                    <div{{ _self.attributes(listAttributes|merge({'class':'collapse in','id':'collapse'~item.getAttribute('id')})) }}>
                        {{ block('children') }}
                    </div>
                {% else %}
                    <div{{ _self.attributes(listAttributes|merge({'class':'collapse','id':'collapse'~item.getName()|replace({' ':''}) })) }}>
                        {{ block('children') }}
                    </div>
                {% endif %}
            {% endif %}
        {%- else %}
            <ul{{ _self.attributes(listAttributes) }}>
                {{ block('children') }}
            </ul>
        {%- endif %}
    {% endif %}
{% endblock %}

{% block children %}
    {# save current variables #}
    {% set currentOptions = options %}
    {% set currentItem = item %}
    {# update the depth for children #}
    {% if options.depth is not none %}
        {% set options = currentOptions|merge({'depth': currentOptions.depth - 1}) %}
    {% endif %}

    {% if currentItem.name != 'root' %}
        <div class="accordion-inner ">
        {% for item in currentItem.children %}
            {{ block('item') }}
        {% endfor %}
        </div>
    {% else %}
        {% for item in currentItem.children %}
            {{ block('item') }}
        {% endfor %}
    {% endif %}
    {# restore current variables #}
    {% set item = currentItem %}
    {% set options = currentOptions %}
{% endblock %}

{% block item %}
    {% if item.displayed %}
        {# building the class of the item #}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {%- if item.current %}
            {# {%- set classes = classes|merge([options.currentClass]) %} #}
            {%- set classes = classes|merge({'class': 'active' }) %}
        {%- elseif item.currentAncestor %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}
        {%- set attributes = item.attributes %}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}
        {# displaying the item #}
        {%- if item.extras['tag'] == 'li' %}
            <li{{ _self.attributes(attributes) }}>
                {%- if item.uri is not empty and (not item.current or options.currentAsLink) %}
                    {{ block('linkElement') }}
                {%- else %}
                    {{ block('spanElement') }}
                {%- endif %}
                {# render the list of children#}
                {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
                {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
                {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
                {{ block('list') }}
            </li>
        {%- elseif item.extras['tag'] == 'div' %}
            <div{{ _self.attributes(attributes) }}>
                {%- if item.uri is not empty and (not item.current or options.currentAsLink) %}
                    {{ block('linkElement') }}
                {%- else %}
                    {{ block('spanElement') }}
                {%- endif %}
                {# render the list of children#}
                {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
                {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
                {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
                {{ block('list') }}
            </div>
        {%- else %}
            <div{{ _self.attributes(attributes) }}>
                {%- if item.uri is not empty and (not item.current or options.currentAsLink) %}
                    {{ block('linkElement') }}
                {%- else %}
                    {{ block('spanElement') }}
                {%- endif %}
                {# render the list of children#}
                {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
                {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
                {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
                {{ block('list') }}
            </div>
        {%- endif %}
    {% endif %}
{% endblock %}

{% block linkElement %}
    {% if item.extras['tag'] =='div' %}
        <div class="accordion-heading">
            <a class="accordion-toggle" data-toggle="collapse"  data-parent="#mainmenu" data-target="#collapse{{ item.getName()|replace({' ':''}) }}" href="{{ item.uri }}"{{ _self.attributes(item.linkAttributes) }}>{{ block('label') }}</a>
        </div>
    {% else %}
        <a href="{{ item.uri }}"{{ _self.attributes(item.linkAttributes) }}>{{ block('label') }}</a>
    {% endif %}
{% endblock %}

{% block spanElement %}<span{{ _self.attributes(item.labelAttributes) }}>{{ block('label') }}</span>{% endblock %}

{% block label %}{% if options.allow_safe_labels and item.getExtra('safe_label', false) %}{{ item.label|raw }}{% else %}{{ item.label }}{% endif %}{% endblock %}
