{% extends '::base.html.twig' %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" language="javascript" src="{{ asset('commons/js/ext-all.js') }}"></script>
    <script type="text/javascript">
        var treeplaceholder="treeplaceholder";
        var currentOrganisationunitName='';
        var inputboxname="hris_organisationunitbundle_hierarchyoperationtype[organisationunit]";
        var organisationunitToMove="#hris_organisationunitbundle_hierarchyoperationtype_organisationunitToMove";
        var parentOrganisationnit="#hris_organisationunitbundle_hierarchyoperationtype_parentOrganisationunit";
        var urlExtension="";
        var selectedNode="";
        function updateOrganisationunitHierarchy() {
            if($('#confirmOrganisationunitToMove').attr('disabled')=='disabled') {
                //Operations for step 2
                if($('#confirmParentOrganisationunit').attr('disabled')!='disabled') {
                    // step 2 is still active for selection of parent
                    if($(organisationunitToMove).val() != $('input[name="'+inputboxname+'"]').val()) {
                        //Update organisationunit to move if confirm is not disabled
                        $(parentOrganisationnit).val( $('input[name="'+inputboxname+'"]').val() );
                        // Label name of selected Organisationunit
                        $('#parentOrganisationunitname').html(currentOrganisationunitName);
                    }else {
                        alert('Organisationunit and parent are the same!!');
                    }
                }

            }else {
                // Operations for step 1
                //Enable confirmation button
                //Update organisationunit to move if confirm is not disabled
                $(organisationunitToMove).val( $('input[name="'+inputboxname+'"]').val() );
                //Change Color of organisationuniToMoveSection
                $('#organisationunitSection').css('background-color','#CCFFCC');
                // Label name of selected Organisationunit
                $('#organisationunitname').html(currentOrganisationunitName);
            }
        };
        function confirmOrganisationunit() {
            // confirm only if organisationunit is selected
            if($(organisationunitToMove).val() !='') {
                // Disable first step confirmation
                $('#confirmOrganisationunitToMove').attr('disabled', 'true');
                // Remove green color from step 1 and place in step 2
                $('#organisationunitSection').removeAttr('style');
                $('#parentOrganisationunitSection').css('background-color','#CCFFCC');
                // State select new parent for child organisationunit
                $('#childOrganisationunit').html($('#organisationunitname').text());
                // Activate confirm button for step2
                $('#confirmParentOrganisationunit').removeAttr('disabled');
            }
        };
        function confirmParentOrganisationunitSelection() {
            // Disable second step confirmation
            $('#confirmParentOrganisationunit').attr('disabled', 'true');
            // Remove green color from step 2 and place in step 3
            $('#parentOrganisationunitSection').removeAttr('style');
            $('#confirmMoveSection').css('background-color','#CCFFCC');
            // Activate confirm button for step3
            $('#hris_organisationunitbundle_hierarchyoperationtype_submit').removeAttr('disabled');
        };
        function resetHierarchyOperation() {
            //Remove green color on step3 and three and place on step1
            $('#parentOrganisationunitSection').removeAttr('style');
            $('#confirmMoveSection').removeAttr('style');
            $('#organisationunitSection').css('background-color','#CCFFCC');
            //Disabled confirmation for step 2 and 3 and activate for step1
            $('#hris_organisationunitbundle_hierarchyoperationtype_submit').attr('disabled', 'true');
            $('#confirmParentOrganisationunit').attr('disabled', 'true');
            $('#confirmOrganisationunitToMove').removeAttr('disabled');
            //Reset html contents for #parentOrganisationunitname, #childOrganisationunit and organisationunitname
            $('#parentOrganisationunitname').html('[[Select Parent]]');
            $('#childOrganisationunit').html('[[Above Selected Organisationunit]]');
            $('#organisationunitname').html('<em>[[Select Organisation unit]]</em>');
            //Clear values for input boxes
            $(organisationunitToMove).val('');
            $(parentOrganisationnit).val('');
        };
        Ext.define('OrganisationUnitTreeModel2', {
            extend: 'Ext.data.Model',
            idProperty: 'id',
            fields: [{name: 'longname',type: 'string'},{name: 'id',type: 'int'},{ name: 'cls',type: 'string'},{name: 'leaf', type: 'boolean'}],
            validations: [{type: 'exclusion', field: 'cls',list: ['file','folder']}]
        });
        Ext.onReady(function(){
            var OrganisationUnitTreeStore2 = Ext.create('Ext.data.TreeStore', {
                storeId: 'MyJsonOrganisationUnitTreeStore2',
                model: 'OrganisationUnitTreeModel2',
                proxy: {
                    type: 'ajax',
                    url: '{{ path('organisationunit_tree',{'_format':'json'}) }}'+urlExtension,
                    reader: { type: 'json', root: 'organisationUnits'}
                },
                nodeParam: 'id',
                root: {longname: 'Orgunits', id: 'src', expanded: true},
                folderSort: true,
                sorters: [{property: 'longname', direction: 'ASC'}]
            });
            var OrganisationUnitTreePanel2 = Ext.create('Ext.tree.Panel', {
                id: 'organisationUnitTreePanel2',
                store: OrganisationUnitTreeStore2,
                displayField: 'longname',
                rootVisible: false,
                singleExpand: false,
                height: 250,
                viewConfig: {},
                renderTo: treeplaceholder,
                listeners: {
                    select: function(selModel2, record, index, options) {
                        var selectedOrgunits2 = selModel2.getSelection();
                        var selectedId2 = selectedOrgunits2[0].get('id');
                        $('input[name="'+inputboxname+'"]').val(selectedId2);
                        currentOrganisationunitName =selectedOrgunits2[0].get('longname');
                        updateOrganisationunitHierarchy();
                    },
                    afterrender: function(treePanel,eOpts) {
                        if(selectedNode){
                            this.selectPath(selectedNode,'id','');
                        };
                    }
                }
            });
        });
    </script>
{% endblock javascripts %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" type="text/css" media="all" href="{{ asset('commons/css/ext-standard.css') }}">
    <link rel="stylesheet" href="{{ asset('commons/css/dt_bootstrap.css') }}" />
{% endblock stylesheets %}

{% block right_content -%}
    <h1><small>Hierarchy Operations</small></h1>

    {{ form_start(hierarchyOperationForm, { 'method' : 'PUT' } ) }}
    <div class="span4">
        {{ form_errors( hierarchyOperationForm.organisationunit ) }}
        {{ form_widget( hierarchyOperationForm.organisationunit ) }}
        <div id="treeplaceholder"></div>
    </div>
    <div class="span4">
        <div id="organisationunitSection">
            <div>1. Select organisation unit to move</div>
            <div id="innerOrganisationunitSection">
                {{ form_errors( hierarchyOperationForm.organisationunitToMove ) }}
                {{ form_widget( hierarchyOperationForm.organisationunitToMove ) }}
                <span id="organisationunitname" class="organisationunitname"><em>[[Select Organisation unit]]</em> </span>
                <br/>
                <input id="confirmOrganisationunitToMove" type="button" class="btn" value="Confirm" onclick="confirmOrganisationunit();">
            </div>
        </div>
        <hr/>
        <div id="parentOrganisationunitSection">
            <div>2. Select New Parent for <span id="childOrganisationunit" class="organisationunitname">[[Above Selected Organisationunit]]</span></div>
            <div id="innerParentOrganisationunitSection">
                {{ form_errors( hierarchyOperationForm.parentOrganisationunit ) }}
                {{ form_widget( hierarchyOperationForm.parentOrganisationunit ) }}
                <span id="parentOrganisationunitname" class="parentOrganisationunitname"><em>[[Select Parent]]</em></span>
                <br/>
                <input id="confirmParentOrganisationunit" type="button" class="btn" value="Confirm" onclick="confirmParentOrganisationunitSelection();" disabled="disabled">
            </div>
        </div>
        <hr/>
        <div id="confirmMoveSection">
            <div>3. Confirm Move</div>
            {{ form_widget(hierarchyOperationForm.submit, {'attr': {'id': 'submitButton','class':'btn','disabled':'disabled','onclick':'confirmNewParentOrgunit()'} }) }}
            <input type="button" class="btn" value="Reset" onclick="resetHierarchyOperation();">
        </div>
    </div>

    {{ form_end(hierarchyOperationForm) }}


{% endblock %}
