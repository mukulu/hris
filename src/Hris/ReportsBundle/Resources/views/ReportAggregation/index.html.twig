{% extends '::base.html.twig' %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" language="javascript" src="{{ asset('commons/js/ext-all.js') }}"></script>
    <script type="text/javascript">
        var treeplaceholder="treeplaceholder";
        var inputboxname="hris_reportsbundle_reportaggregationtype[organisationunit]";
        var urlExtension="";
        var selectedNode="";
        Ext.define('OrganisationUnitTreeModel2', {
            extend: 'Ext.data.Model',
            idProperty: 'id',
            fields: [{name: 'longname',type: 'string'},{name: 'id',type: 'int'},{ name: 'cls',type: 'string'},{name: 'leaf', type: 'boolean'}],
            validations: [{type: 'exclusion', field: 'cls',list: ['file','folder']}]
        });
        Ext.onReady(function(){
            var OrganisationUnitTreeStore2 = Ext.create('Ext.data.TreeStore', {
                storeId: 'MyJsonOrganisationUnitTreeStore2',
                model: 'OrganisationUnitTreeModel2',
                proxy: {
                    type: 'ajax',
                    url: '{{ path('organisationunit_tree',{'_format':'json'}) }}'+urlExtension,
                    reader: { type: 'json', root: 'organisationUnits'}
                },
                nodeParam: 'id',
                root: {longname: 'Orgunits', id: 'src', expanded: true},
                folderSort: true,
                sorters: [{property: 'longname', direction: 'ASC'}]
            });
            var OrganisationUnitTreePanel2 = Ext.create('Ext.tree.Panel', {
                id: 'organisationUnitTreePanel2',
                store: OrganisationUnitTreeStore2,
                displayField: 'longname',
                rootVisible: false,
                singleExpand: false,
                height: 250,
                viewConfig: {},
                renderTo: treeplaceholder,
                listeners: {
                    select: function(selModel2, record, index, options) {
                        var selectedOrgunits2 = selModel2.getSelection();
                        var selectedId2 = selectedOrgunits2[0].get('id');
                        $('input[name="'+inputboxname+'"]').val(selectedId2);
                    },
                    afterrender: function(treePanel,eOpts) {
                        if(selectedNode){
                            this.selectPath(selectedNode,'id','');
                        };
                    }
                }

            });
        });
        $( document ).ready(function() {

            var withLowerLevels='#hris_reportsbundle_reportaggregationtype_withLowerLevels';
            var organisationunitGroup='#hris_reportsbundle_reportaggregationtype_organisationunitGroup';
            var fieldOneId='#hris_reportsbundle_reportaggregationtype_fields';
            var fieldTwoId='#hris_reportsbundle_reportaggregationtype_fieldsTwo';
            var graphTypeId='#hris_reportsbundle_reportaggregationtype_graphType';

            // Disable second field and organisationunitGroup
            $(organisationunitGroup).attr('disabled', 'true');
            $(fieldTwoId).attr('disabled', 'true');

            // On checking the withLowerLevels fields enable organisationunitGroup
            $(withLowerLevels).on('change', function() {
                // enable organisationunitGroup
                if( $(withLowerLevels).is(':checked')) {
                    $(organisationunitGroup).removeAttr('disabled');
                }else{
                    $(organisationunitGroup).attr('disabled', 'true');
                }
            });
            $(fieldOneId).on('change', function() {
                $(fieldTwoId).find('option[value=""]').remove();
                // enable field two when the field field value  is not empty
                if( $(fieldOneId).val() != '' ) {
                    $(fieldTwoId).removeAttr('disabled');
                    // On change of first field, trim selected option
                    // from first field on second.
                    $(fieldTwoId+' option').each(function(){
                        if( $(fieldOneId).val() == $(this).val() ) {
                            //alert($(fieldTwoId).text());
                            $(this).text('Use one Field')
                            //$(fieldTwoId).append(new Option($(this).text(), $(this).val()));
                        }else{
                            //alert($(fieldOneId).find('option[value="'+$(this).val()+'"]').text());
                            $(this).text($(fieldOneId).find('option[value="'+$(this).val()+'"]').text());
                        }
                    });
                }else{
                    $(fieldTwoId).attr('disabled', 'true');
                }
            });
            // On entering value of second field remove pie chart option
            $(fieldTwoId).on('change', function() {
                if($(this).val() != ''){
                        if($(this).val() != $(fieldOneId).val())
                            //alert($(fieldTwoId).val());
                            $(graphTypeId).find('option[value="pie"]').remove();
                //add the pie chart option in the select if removed
                }else if ($(graphTypeId).find( 'option[value="' + "pie" + '"]').length === 0) {
                    $(graphTypeId).append(new Option('Pie Chart', 'pie'));
                }
            });
        });
    </script>
{% endblock javascripts %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" type="text/css" media="all" href="{{ asset('commons/css/ext-standard.css') }}">
{% endblock stylesheets %}

{% block right_content -%}
    <h1><small>Report Aggregation</small></h1>

    {{ form_start(aggregationForm, { 'method' : 'PUT' } ) }}

    <div>
        <div id="treeplaceholder"></div>
        {{ form_errors( aggregationForm.organisationunit ) }}
        {{ form_widget( aggregationForm.organisationunit ) }}
    </div>
    <br/>
    {{ form_row( aggregationForm.withLowerLevels ) }}
    {{ form_row( aggregationForm.organisationunitGroup ) }}
    {{ form_row( aggregationForm.forms ) }}

    {{ form_label(aggregationForm.fields) }}
    {{ form_widget(aggregationForm.fields, {'attr': {'class': 'task_field'}}) }}
    {{ form_widget(aggregationForm.fields, {'attr': {'class': 'task_field'}}) }}

    {{ form_end(aggregationForm) }}


{% endblock %}
